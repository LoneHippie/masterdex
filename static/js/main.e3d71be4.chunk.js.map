{"version":3,"sources":["components/PokeCard.js","images/bug.svg","images/dark.svg","images/dragon.svg","images/electric.svg","images/fairy.svg","images/fighting.svg","images/fire.svg","images/flying.svg","images/ghost.svg","images/grass.svg","images/ground.svg","images/ice.svg","images/normal.svg","images/poison.svg","images/psychic.svg","images/rock.svg","images/steel.svg","images/water.svg","components/PokeCardFull.js","components/PokeCardMini.js","api/pokeapi.js","components/Welcome.js","components/SearchSuggestions.js","components/SearchBar.js","components/LoaderButtons.js","components/App.js","index.js"],"names":["PokeCard","props","styles","gradient_normal","gradient_fire","gradient_water","gradient_electric","gradient_grass","gradient_ice","gradient_fighting","gradient_poison","gradient_ground","gradient_flying","gradient_psychic","gradient_bug","gradient_rock","gradient_ghost","gradient_dragon","gradient_dark","gradient_steel","gradient_fairy","solid_normal","solid_fire","solid_water","solid_electric","solid_grass","solid_ice","solid_fighting","solid_poison","solid_ground","solid_flying","solid_psychic","solid_bug","solid_rock","solid_ghost","solid_dragon","solid_dark","solid_steel","solid_fairy","textColor","type","getContrastBg","typeListIcons","input","types","bug","Bug","dark","Dark","dragon","Dragon","electric","Electric","fairy","Fairy","fighting","Fighting","fire","Fire","flying","Flying","ghost","Ghost","grass","Grass","ground","Ground","ice","Ice","normal","Normal","poison","Poison","psychic","Psychic","rock","Rock","steel","Steel","water","Water","i","length","push","name","map","index","className","src","eval","alt","typeListText","style","background","border","abilityListText","abilities","ability","openFullDisplay","e","document","getElementById","target","id","display","closeFullDisplay","closeDisplayViaX","slice","allCards","entries","el","value","pokemon","pokemonIndex","data","onClick","PokeCardFull","typeName","toggleDisplay","checkStatus","statDisplay","moveDisplay","checked","statBars","stats","percentage","max","jsx","getTotalStats","this","reduce","acc","base_stat","perc","String","width","htmlFor","originalGen","firstVersion","game_indicies","movePool","console","log","version_group_details","move_learn_method","level_learned_at","move","color","height","weight","sprites","front_default","filter","onChange","moves","PokeCardMini","axios","create","baseURL","Welcome","SearchSuggestions","suggestionsList","includes","query","clickFill","isFocused","SearchBar","state","term","pokeList","getAllEntries","a","pokeapi","get","pokeEntries","allPokeEntries","results","setState","onFormSubmit","event","preventDefault","onSubmit","handleWindowClick","window","addEventListener","spellCheck","placeholder","replace","toLowerCase","onFocus","innerHTML","React","Component","LoaderButtons","loadNext","limit","listMode","loadAll","loadGen","disabled","selected","App","pokeLimit","currentList","populatePokeList","emptyArr","prevState","onSearchSubmit","params","response","url","loadMorePokemon","loadAllPokemon","gen","pokemon_species","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.e3d71be4.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/_pokecard.scss';\nimport '../styles/svg_icons.css';\n\nimport Bug from '../images/bug.svg';\nimport Dark from '../images/dark.svg';\nimport Dragon from '../images/dragon.svg';\nimport Electric from '../images/electric.svg';\nimport Fairy from '../images/fairy.svg';\nimport Fighting from '../images/fighting.svg';\nimport Fire from '../images/fire.svg';\nimport Flying from '../images/flying.svg';\nimport Ghost from '../images/ghost.svg';\nimport Grass from '../images/grass.svg';\nimport Ground from '../images/ground.svg';\nimport Ice from '../images/ice.svg';\nimport Normal from '../images/normal.svg';\nimport Poison from '../images/poison.svg';\nimport Psychic from '../images/psychic.svg';\nimport Rock from '../images/rock.svg';\nimport Steel from '../images/steel.svg';\nimport Water from '../images/water.svg';\n\nimport PokeCardFull from './PokeCardFull';\nimport PokeCardMini from './PokeCardMini';\n\nconst PokeCard = (props) => {\n\n    //style object for card backgrounds\n    let styles = {\n        gradient_normal: \"linear-gradient(to top left, rgba(169, 169, 169, 0.95), rgba(169, 169, 169, 0.6))\",\n        gradient_fire: \"linear-gradient(to top left, rgba(238, 129, 48, 0.95), rgba(238, 129, 48, 0.6))\",\n        gradient_water: \"linear-gradient(to top left, rgba(99, 144, 240, 0.95), rgba(99, 144, 240, 0.6))\",\n        gradient_electric: \"linear-gradient(to top left, rgba(247, 208, 44, 0.95), rgba(247, 208, 44, 0.6))\",\n        gradient_grass: \"linear-gradient(to top left, rgba(122, 199, 76, 0.95), rgba(122, 199, 76, 0.6))\",\n        gradient_ice: \"linear-gradient(to top left, rgba(150, 217, 214, 0.95), rgba(150, 217, 214, 0.6))\",\n        gradient_fighting: \"linear-gradient(to top left, rgba(194, 46, 40, 0.95), rgba(194, 46, 40, 0.6))\",\n        gradient_poison: \"linear-gradient(to top left, rgba(163, 62, 161, 0.95), rgba(163, 62, 161, 0.6))\",\n        gradient_ground: \"linear-gradient(to top left, rgba(226, 191, 101, 0.95), rgba(226, 191, 101, 0.6))\",\n        gradient_flying: \"linear-gradient(to top left, rgba(169, 143, 243, 0.95), rgba(169, 143, 243, 0.6))\",\n        gradient_psychic: \"linear-gradient(to top left, rgba(249, 85, 135, 0.95), rgba(249, 85, 135, 0.6))\",\n        gradient_bug: \"linear-gradient(to top left, rgba(166, 185, 26, 0.95), rgba(166, 185, 26, 0.6))\",\n        gradient_rock: \"linear-gradient(to top left, rgba(182, 161, 54, 0.95), rgba(182, 161, 54, 0.6))\",\n        gradient_ghost: \"linear-gradient(to top left, rgba(115, 87, 151, 0.95), rgba(115, 87, 151, 0.6))\",\n        gradient_dragon: \"linear-gradient(to top left, rgba(111, 53, 252, 0.95), rgba(111, 53, 252, 0.6))\",\n        gradient_dark: \"linear-gradient(to top left, rgba(112, 87, 70, 0.95), rgba(112, 87, 70, 0.6))\",\n        gradient_steel: \"linear-gradient(to top left, rgba(183, 183, 206, 0.95), rgba(183, 183, 206, 0.6))\",\n        gradient_fairy: \"linear-gradient(to top left, rgba(214, 133, 173, 0.95), rgba(214, 133, 173, 0.6))\",\n\n        solid_normal: \"rgba(169, 169, 169)\",\n        solid_fire: \"rgba(238, 129, 48)\",\n        solid_water: \"rgba(99, 144, 240)\",\n        solid_electric: \"rgba(247, 208, 44)\",\n        solid_grass: \"rgba(122, 199, 76)\",\n        solid_ice: \"rgba(150, 217, 214)\",\n        solid_fighting: \"rgba(194, 46, 40)\",\n        solid_poison: \"rgba(163, 62, 161)\",\n        solid_ground: \"rgba(226, 191, 101)\",\n        solid_flying: \"rgba(169, 143, 243)\",\n        solid_psychic: \"rgba(249, 85, 135)\",\n        solid_bug: \"rgba(166, 185, 26)\",\n        solid_rock: \"rgba(182, 161, 54)\",\n        solid_ghost: \"rgba(115, 87, 151)\",\n        solid_dragon: \"rgba(111, 53, 252)\",\n        solid_dark: \"rgba(112, 87, 70)\",\n        solid_steel: \"rgba(183, 183, 206)\",\n        solid_fairy: \"rgba(214, 133, 173)\"\n    };\n\n    //text color changer for managing background contrast\n    const textColor = (type) => {\n        if (type === 'grass' || type === 'water' || type === 'poison' || type === 'fighting' || type === 'dragon' || type === 'dark' || type === 'ghost' || type === 'psychic') {\n            return '#DCDCDC';\n        } else {\n            return '#2F4F4F';\n        };\n    };\n\n    //for getting the inverse bg color of the text color\n    const getContrastBg = (type) => {\n        if (type === 'grass' || type === 'water' || type === 'poison' || type === 'fighting' || type === 'dragon' || type === 'dark' || type === 'ghost' || type === 'psychic') {\n            return '#2F4F4F';\n        } else {\n            return '#DCDCDC';\n        };\n    }\n\n    //function for getting JSX img list of type icons\n    const typeListIcons = (input) => {\n        let types = [];\n\n        //re-assigning imported variables to local variables for easier use\n        const [bug, dark, dragon, electric, fairy, fighting, fire, flying, ghost, grass, ground, ice, normal, poison, psychic, rock, steel, water] = [Bug, Dark, Dragon, Electric, Fairy, Fighting, Fire, Flying, Ghost, Grass, Ground, Ice, Normal, Poison, Psychic, Rock, Steel, Water];\n\n        for (let i = 0; i < input.length; i++) {\n            types.push(input[i].type.name);\n        };\n\n        return types.map((input, index) => <img key={`pk-type-icon-${index}`} className={`icon ${input}`} src={eval(input)} alt={`${input} icon`}/>);\n    };\n\n     //function for getting JSX div list of type names\n    const typeListText = (input, type) => {\n        let types = [];\n\n        for (let i = 0; i < input.length; i++) {\n            types.push(input[i].type.name);\n        };\n\n        return types.map((input, index) => \n            <div key={`pk-type-text-${index}`} className=\"pokecard-full__general-info__type-container--type\" style={{background: eval(`styles.gradient_${input}`), border: `2px solid ${textColor(type)}`}}>\n                {input}\n            </div>\n        );\n    };\n\n    //function for getting JSX div list of ability names\n    const abilityListText = (input, type) => {\n        let abilities = [];\n\n        for (let i = 0; i < input.length; i++) {\n            abilities.push(input[i].ability.name);\n        };\n\n        return abilities.map((input, index) => \n            <div key={`pk-ability-text-${index}`} className=\"pokecard-full__general-info__ability-container--ability\" style={{background: getContrastBg(type), border: `2px solid ${textColor(type)}`}}>\n                {input}\n            </div>\n        );\n    };\n\n    //functions for click events toggling display for full pokemon cards\n    function openFullDisplay(e) {\n        document.getElementById(`full-display-${e.target.id}`).style.display = \"flex\";\n        document.getElementById(`display-${e.target.id}`).style.display = \"block\";\n    };\n    function closeFullDisplay(e) { //need to target id='display-pk-{pokemon.data.id}, id='full-display-pk-{pokemon.data.id}'\n        document.getElementById(`full-${e.target.id}`).style.display = \"none\";\n        document.getElementById(`${e.target.id}`).style.display = \"none\";\n    };\n    function closeDisplayViaX(e) {\n        document.getElementById(`full-${e.target.id.slice(6)}`).style.display = \"none\";\n        document.getElementById(`${e.target.id.slice(6)}`).style.display = \"none\";\n    };\n\n    //function for creating all ui cards by looping through prop data passed from App.js\n    const allCards = props.entries.map((el, value) => {\n\n        // let typeName = el.data.types[0].type.name; //shortcut for arguments\n\n        //NOTE 20/11/20 ::: make a color for normal type so when the full display for a normal pokemon pops up it isn't transparent!\n\n        return (\n            <article className=\"pokemon\" key={`pokemon-entry-${value}`}>\n\n                <PokeCardMini \n                    pokemon={el}\n                    pokemonIndex={value}\n                    styles={styles}\n                    textColor={textColor}\n                    typeListIcons={typeListIcons}\n                    openFullDisplay={openFullDisplay}\n                />\n\n                <section \n                    key={`pokemon-full-${value}-blur`}\n                    className=\"full-card-blur\"\n                    id={`display-pk-${el.data.id}`}\n                    onClick={closeFullDisplay}>\n                </section>\n\n                <PokeCardFull \n                    pokemon={el}\n                    pokemonIndex={value}\n                    styles={styles}\n                    textColor={textColor}\n                    getContrastBg={getContrastBg}\n                    typeListText={typeListText}\n                    abilityListText={abilityListText}\n                    closeFullDisplay={closeDisplayViaX} //special function for closing full display specifically with X button\n                />\n\n            </article>\n        );\n    });\n\n    return(\n        <div className='main-display'>\n            {allCards}\n        </div>\n    );\n};\n\nexport default PokeCard;","export default __webpack_public_path__ + \"static/media/bug.204df919.svg\";","export default __webpack_public_path__ + \"static/media/dark.27fdc7ed.svg\";","export default __webpack_public_path__ + \"static/media/dragon.9d32757b.svg\";","export default __webpack_public_path__ + \"static/media/electric.bc35c5a3.svg\";","export default __webpack_public_path__ + \"static/media/fairy.767c2f56.svg\";","export default __webpack_public_path__ + \"static/media/fighting.f20d1bd2.svg\";","export default __webpack_public_path__ + \"static/media/fire.e0bd7fca.svg\";","export default __webpack_public_path__ + \"static/media/flying.d1778503.svg\";","export default __webpack_public_path__ + \"static/media/ghost.ddf26831.svg\";","export default __webpack_public_path__ + \"static/media/grass.e09623e3.svg\";","export default __webpack_public_path__ + \"static/media/ground.e567f4fc.svg\";","export default __webpack_public_path__ + \"static/media/ice.cd2f9043.svg\";","export default __webpack_public_path__ + \"static/media/normal.2ba66dd5.svg\";","export default __webpack_public_path__ + \"static/media/poison.43956925.svg\";","export default __webpack_public_path__ + \"static/media/psychic.67439878.svg\";","export default __webpack_public_path__ + \"static/media/rock.61a8428d.svg\";","export default __webpack_public_path__ + \"static/media/steel.cb91a92a.svg\";","export default __webpack_public_path__ + \"static/media/water.b6d13329.svg\";","import React from 'react';\nimport '../styles/_pokecard__full.scss';\nimport '../styles/_pokecard__full--detailed-info.scss';\n\nconst PokeCardFull = (props) => {\n\n    const { pokemon, pokemonIndex, styles, textColor, getContrastBg, typeListText, abilityListText } = props;\n\n    let typeName = pokemon.data.types[0].type.name;\n\n    //function for toggling between base stat and move pool view\n    function toggleDisplay() {\n        let checkStatus = document.getElementById(`switch-${pokemonIndex}`);\n        let statDisplay = document.getElementById(`stat-display-${pokemonIndex}`);\n        let moveDisplay = document.getElementById(`move-display-${pokemonIndex}`);\n\n        if (checkStatus.checked === false) {\n            statDisplay.style.display = \"flex\";\n            moveDisplay.style.display = \"none\";\n        } else {\n            statDisplay.style.display = \"none\";\n            moveDisplay.style.display = \"grid\";\n        }\n\n    };\n\n    //function for getting JSX for stat bars. Starting point = el.data.stats for input\n    const statBars = (input, type) => {\n        let stats = {\n            name: ['HP', 'Attack', 'Defense', 'Sp. Attack', 'Sp. Defense', 'Speed', 'Total'], //name of each stat including \"total\"\n            value: [], //value for each individual stat\n            percentage: [], //percentage for width styling\n            max: [255, 190, 230, 194, 230, 180, 780], //max value of each stat\n            jsx: [], //jsx elements to  be returned later\n\n            getTotalStats: function() {\n                let max = this.value.reduce((el, acc) => el + acc);\n                this.value.push(max);\n            }\n        };\n\n        //getting data per pokemon for stat values\n        for (let i = 0; i < input.length; i++) {\n            stats.value.push(input[i].base_stat);\n        };\n\n        stats.getTotalStats();\n\n        for (let i = 0; i < stats.value.length; i++) {\n            let perc;\n\n            perc = (stats.value[i] / stats.max[i]) * 100;\n            perc = perc + '%';\n\n            stats.percentage.push(String(perc));\n        };\n\n        for (let i = 0; i < stats.value.length; i++) {\n            stats.jsx.push(\n                <div className=\"stat\" key={`stat-${stats.name[i]}`}>\n                    <div className=\"stat__container\" key={`stat-container-${stats.name[i]}`} style={{border: `2px solid ${textColor(typeName)}`}}>\n                        <div className=\"stat__container--stat\" key={`stat-bar-${stats.name[i]}`} id={`stat-bar-${stats.name[i]}`} style={{width: stats.percentage[i], background: getContrastBg(typeName)}}>\n                            <strong className=\"stat__container--stat--value\" key={`stat-bar-value-${stats.name[i]}`}>{stats.value[i]}</strong>\n                        </div>\n                    </div>\n                    <label className=\"stat--label\" key={`stat-label-${stats.name[i]}`} htmlFor={`stat-bar-${stats.name[i]}`}>{stats.name[i]}</label>\n                </div>\n            );\n        };\n\n        return stats.jsx; //array of jsx generated from for looping over stats obj\n        \n    };\n\n    const originalGen = () => {\n        let firstVersion = pokemon.data.game_indicies[0].name;\n\n        switch(true) {\n            case firstVersion === 'red' || firstVersion === 'blue' || firstVersion === 'yellow':\n                return 1;\n            case firstVersion === 'gold' || firstVersion === 'silver' || firstVersion === 'crystal':\n                return 2;\n            case firstVersion === 'ruby' || firstVersion === 'sapphire' || firstVersion === 'emerald' || firstVersion === 'firered' || firstVersion === 'leafgreen':\n                return 3;\n            case firstVersion === 'diamond' || firstVersion === 'pearl' || firstVersion === 'platinum' || firstVersion === 'heartgold' || firstVersion === 'soulsilver':\n                return 4;\n            case firstVersion === 'black' || firstVersion ==='white' || firstVersion === 'black-2' || firstVersion === 'white-2':\n                return 5;\n            default:\n                return 6; //game_indicies after gen5 are not listed but move properties should be more or less the same for every sequential gen\n        };\n    };\n\n    const movePool = (input, type) => { //input = pokemon.data.moves\n        return input.map((el, index) => \n            <div className=\"move\" key={`pk-move-${index}`} style={{background: getContrastBg(typeName), border: `2px solid ${textColor(typeName)}`}} onClick={() => console.log(el.version_group_details[0].move_learn_method.name)}>\n                <div className=\"move__info\" key={`pk-move-info-${index}`}>\n                    <span className=\"move__info--learn-lvl\" key={`pk-learn-level-${index}`}>\n                        lvl {el.version_group_details[0].level_learned_at}\n                    </span>\n                    <span className=\"move__info--learn-method\" key={`pk-learn-method-${index}`}>\n                        {el.version_group_details[0].move_learn_method.name}\n                    </span>\n                </div>\n                <div className=\"move--name\" key={`pk-move-${index}`}>\n                    {el.move.name}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <section className=\"pokecard-full\" key={`pokemon-full-${pokemonIndex}`} id={`full-display-pk-${pokemon.data.id}`} style={{background: eval(`styles.solid_${typeName}`)}}>\n\n            <strong className=\"pokecard-full--exit\" style={{color: textColor(typeName)}} id={`close-display-pk-${pokemon.data.id}`} onClick={props.closeFullDisplay}>x</strong>\n                    \n            <div className=\"pokecard-full__general-info\" style={{color: textColor(typeName)}}>\n\n                <div className=\"pokecard-full__general-info--id\">{`Game ID: #${pokemon.data.id}`}</div>\n                <div className=\"pokecard-full__general-info--height\">{`Height: ${pokemon.data.height / 10}m`}</div>\n                <div className=\"pokecard-full__general-info--weight\">{`Weight: ${pokemon.data.weight / 10}kg`}</div>\n\n                <div className=\"pokecard-full__general-info__type-container\">\n                    <span>Type:</span>\n                    <div style={{color: textColor(typeName)}}>\n                        {typeListText(pokemon.data.types, typeName)}\n                    </div>\n                </div>\n\n                <div className=\"pokecard-full__general-info__ability-container\">\n                    <span>Abilities:</span>\n                    <div className=\"ability-flex-container\" >\n                        {abilityListText(pokemon.data.abilities, typeName)}\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"pokecard-full__visual\">\n\n                <div className=\"pokecard-full__visual--name\" key={`pk-name-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {pokemon.data.name}\n                </div>\n\n                <img\n                    key={`pk-sprite-${pokemonIndex}`}\n                    src={pokemon.data.sprites.front_default}\n                    alt={`sprite for ${pokemon.data.name}`}\n                    className=\"pokecard-full__visual--sprite\"\n                    style={{filter: `drop-shadow(1.5px 3px 3px #2F4F4F`}}\n                />\n\n            </div>\n\n            <div className=\"pokecard-full__detailed-info\">\n\n                <section className=\"info-toggle\" style={{color: textColor(typeName)}}>\n                    <span className=\"info-toggle--current-label\">Stats</span>\n                    <input type=\"checkbox\" id={`switch-${pokemonIndex}`} className=\"info-toggle--switch\" onChange={toggleDisplay}/>\n                    <label htmlFor={`switch-${pokemonIndex}`} className=\"info-toggle--switch--label\"></label>\n                    <span className=\"info-toggle--current-label\">Moves</span>\n                </section>\n                \n                <section className=\"stat-display\" id={`stat-display-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {statBars(pokemon.data.stats)}\n                </section>\n\n                <section className=\"move-display\" id={`move-display-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {movePool(pokemon.data.moves)}\n                </section>\n\n            </div>\n\n        </section>\n    );\n\n};\n\nexport default PokeCardFull;","import React from 'react';\nimport '../styles/_pokecard.scss';\n\nconst PokeCardMini = (props) => {\n\n    const { pokemon, pokemonIndex, styles, textColor, typeListIcons, openFullDisplay } = props;\n\n    let typeName = pokemon.data.types[0].type.name;\n\n    return (\n        <section key={`pokemon-mini-${pokemonIndex}`} className=\"main-display__pokecard\" style={{background: eval(`styles.gradient_${typeName}`)}} onClick={openFullDisplay}>\n\n            <div className=\"main-display__pokecard__info\" key={`pk-info-display-${pokemonIndex}`}>\n                <div key={`pk-types-${pokemonIndex}`} className=\"main-display__pokecard__info--types\">\n                    {typeListIcons(pokemon.data.types)}\n                </div>\n                <div className=\"main-display__pokecard__info--number\" key={`pk-id-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {`#${pokemon.data.id}`}\n                </div>\n            </div>\n\n            <img\n                key={`pk-sprite-${pokemonIndex}`}\n                src={pokemon.data.sprites.front_default}\n                alt={`sprite for ${pokemon.data.name}`}\n                className=\"main-display__pokecard--sprite\"\n                style={{filter: `drop-shadow(1.5px 3px 3px #2F4F4F`}}\n            />\n\n            <div className=\"main-display__pokecard--name\" key={`pk-name-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                {pokemon.data.name}\n            </div>\n\n            <div\n                key={`pokemon-selector-${pokemon.data.id}`}\n                id={`pk-${pokemon.data.id}`}\n                className=\"pokecard--mask\">\n            </div>\n\n        </section>\n    );\n\n};\n\nexport default PokeCardMini;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/'\n});","import React from 'react';\nimport '../styles/_welcome.scss';\n\nconst Welcome = () => {\n\n    function closeWelcome() {\n        document.getElementById('welcome').style.display = \"none\";\n    };\n    \n    return (\n        <section className=\"welcome\" id=\"welcome\">\n\n            <article className=\"welcome-container\">\n                <h1 className=\"welcome-container--title\">WELCOME TRAINER</h1>\n                <p className=\"welcome-container--paragraph\">\n                    Welcome to Masterdex, a handly detailed pokedex webapp! Here you can find detailed information on any pokemon from every generation either by search or browsing. If this is your first time using Masterdex, please read the instructions below before hitting continue.\n                </p>\n                <h2 className=\"welcome-container--instruction-title\">SEARCHING</h2>\n                <ul className=\"welcome-container__instruction-list\">\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To find a specific pokemon, just enter a name in the search bar\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        You can also use the search bar to show all pokemon that match a certain type by searching for that type by name, eg. \"fire\", \"fighting\", \"fairy\"\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        At the bottom of the screen you can also show all pokemon from a specific game generation by simply selecting that generation from the list\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To show more pokemon in sequential order, just click the \"SHOW MORE\" button\n                    </li>\n                </ul>\n                <h2 className=\"welcome-container--instruction-title\">DETAILED INFO</h2>\n                <ul className=\"welcome-container__instruction-list\">\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To get detailed info about any pokemon, click the card displayed on screen to open a full display of that pokemon's details, moves and stats\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        NOTE: abilities and moves for generation 8 pokemon are currently unavailable\n                    </li>\n                </ul>\n\n                <div className=\"welcome-container__btn\" onClick={closeWelcome}>\n                    Continue\n                </div>\n            </article>\n\n            <div className=\"welcome-blur\"></div>\n\n        </section>\n    );\n};\n\nexport default Welcome;","import React from 'react';\nimport '../styles/_suggestions.scss';\n\nconst SearchSuggestions = (props) => {\n\n    const suggestions = props.entries.filter(el => el.name.includes(props.query));\n\n    const suggestionsList = suggestions.map((el, value) => {\n        if (props.query !== '') {\n            return (\n                <li key={value} className=\"suggestions__item\">\n                    <span className=\"suggestions-span\" onClick={props.clickFill}>{el.name}</span>\n                </li>\n            );\n        }\n    });\n\n    return (\n        <ul className=\"suggestions\" style={{display: props.isFocused}} id=\"suggestions-ul\">\n            {suggestionsList}\n        </ul>\n    );\n};\n\nexport default SearchSuggestions;","import React from 'react';\nimport pokeapi from '../api/pokeapi';\nimport SearchSuggestions from './SearchSuggestions';\n\nimport '../styles/_searchbar.scss';\n\nclass SearchBar extends React.Component {\n\n    state = {term: '', pokeList: [], isFocused: 'none'};\n\n    getAllEntries = async() => {\n        const pokeEntries = await pokeapi.get('/pokemon?limit=893');\n\n        let allPokeEntries = pokeEntries.data.results;\n\n        this.setState({pokeList: allPokeEntries});\n    };\n\n    componentDidMount() {\n        this.getAllEntries();\n        window.addEventListener('click', this.handleWindowClick);\n    };\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.onSubmit(this.state.term);\n    };\n\n    handleWindowClick = (e) => {\n        if (e.target.className !== 'search-input' && e.target.className !== 'suggestions-span') {\n            this.setState({isFocused: 'none'});\n        };\n    };\n\n    render() {\n        return(\n            <nav className=\"searchbar\">\n                <form onSubmit={this.onFormSubmit} className=\"searchbar__form\">\n                    <div className=\"searchbar__form--field\">\n                        <label>Pokemon Search</label>\n                        <input\n                            className=\"search-input\"\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"pokemon name or type\"\n                            onChange={(e) => {\n                                let value = e.target.value\n                                value = value.replace(/[^A-Za-z]/ig, '').toLowerCase()\n                                this.setState({term: value})\n                            }}\n                            onFocus={() => this.setState({isFocused: 'block'})}\n                            value={this.state.term}\n                            id=\"search-input\"\n                        />\n                        <SearchSuggestions\n                            query={this.state.term}\n                            clickFill={(e) => this.setState({term: e.target.innerHTML})}\n                            entries={this.state.pokeList}\n                            isFocused={this.state.isFocused}\n                        />\n                    </div>\n                    <button className=\"searchbar__form--btn\">Search</button>\n                </form>\n            </nav>\n        );\n    };\n};\n\nexport default SearchBar;","import React from 'react';\nimport '../styles/_loaderButton.scss';\n\nconst LoaderButtons = (props) => {\n\n    return(\n        <div className=\"loader-button-container\">\n            <div \n                className=\"loader-button-container__btn\"\n                onClick={props.loadNext}\n                style={{display: `${props.limit === 893 ? 'none' : 'block'}`}}>\n                    {props.listMode !== 'default' ? 'Back' : 'Show More'}\n            </div>\n            <div \n                className=\"loader-button-container__btn\"\n                onClick={props.loadAll}\n                style={{display: `${props.limit === 893 || props.listMode !== 'default' ? 'none' : 'block'}`}}>\n                    Load all\n            </div>\n            <div className=\"loader-button-container__custom-select\">\n                <select onChange={(e) => props.loadGen(e.target.value)} className=\"loader-button-container__custom-select--gens\">\n                    <option value=\"0\" disabled selected>GENERATION</option>\n                    <option value=\"1\">Gen 1</option>\n                    <option value=\"2\">Gen 2</option>\n                    <option value=\"3\">Gen 3</option>\n                    <option value=\"4\">Gen 4</option>\n                    <option value=\"5\">Gen 5</option>\n                    <option value=\"6\">Gen 6</option>\n                    <option value=\"7\">Gen 7</option>\n                    <option value=\"8\">Gen 8</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default LoaderButtons;","import React from 'react';\nimport pokeapi from '../api/pokeapi';\n\nimport Welcome from './Welcome';\nimport SearchBar from './SearchBar';\nimport PokeCard from './PokeCard';\nimport LoaderButtons from './LoaderButtons';\n\nclass App extends React.Component {\n\n    state = { pokeList: [], pokeLimit: 25, currentList: null, listMode: 'default' };\n\n    //NOTE 29/11/20 ::: Make full display for instructions/welcome on initial loads. Explain how the search works, that you can click/tap (depending on user screen size) on any pokemon to see a full display of detailed info. Have it also explain that currently ability and move info for all gen 8 pokemon is missing.\n\n    populatePokeList = async(limit) => {\n        //empty array to loop over els for API calls\n        let emptyArr = [];\n        //filling array with every number needed for API calls: currently 893 pokemon\n        for (let i = 1; i <= limit; i++) {\n            emptyArr.push(i);\n        };\n        //loop through emptyArr to numerically call data for each pokemon in order and push into pokeList state\n        for (const el of emptyArr) {\n            const pokemon = await pokeapi.get(`/pokemon/${el}`);\n            this.setState((prevState) => {\n                return prevState.pokeList.push(pokemon);\n            });\n        }\n    };\n\n    componentDidMount() {\n        //generating state for all pokemon API fetches\n        this.populatePokeList(this.state.pokeLimit);\n    };\n\n    componentDidUpdate() {\n        if (this.state.listMode === 'default' && this.state.pokeList.length === this.state.pokeLimit) {\n            console.log('All current pokemon entries rendered');\n            console.log(`Current entries in mounted component: ${this.state.pokeList.length}`);\n        };\n    };\n\n    onSearchSubmit = async (term) => {\n        try {\n            if (term === 'fire' || term === 'normal' || term === 'grass' || term === 'water' || term === 'fighting' || term === 'flying' || term === 'poison' || term === 'ground' || term === 'rock' || term === 'bug' || term === 'ghost' || term === 'electric' || term === 'psychic' || term === 'ice' || term === 'dragon' || term === 'dark' || term === 'steel' || term === 'fairy') { //check to see if term is a type string\n                this.setState({listMode: 'type'}); //set list mode to type for checking in other components\n                this.setState({pokeList: []}); //reset list\n\n                const response = await pokeapi.get(`/type/${term}`, {\n                    params: { query: term }\n                });\n\n                for (let i = 0; i <= response.data.pokemon.length; i++) {\n                    const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n                    //break condition in case max id is reached\n                    if (pokemon.data.id >= 893) {\n                        console.log(`All ${term} pokemon entries rendered`);\n                        console.log(`Current entries in mounted component: ${this.state.pokeList.length}`);\n                        break; \n                    };\n\n                    //pokemon id 808 and 809 are currently broken and have empty stat arrays\n                    if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                        this.setState((prevState) => {\n                            return prevState.pokeList.push(pokemon);\n                        });\n                    };\n                };\n\n            } else { //normal single return search\n                const response = await pokeapi.get(`/pokemon/${term}`, {\n                    params: { query: term }\n                });\n\n                if (term === '') { //refresh\n                    if (this.state.listMode !== 'default' && this.state.pokeList.length !== this.state.pokeLimit) {\n                        this.setState({listMode: 'default'});\n                        this.setState({pokeList: []});\n                        this.populatePokeList(this.state.pokeLimit);\n                    }\n                } else {\n                    this.setState({listMode: 'search'});\n                    this.setState({pokeList: []});\n                    this.setState((prevState) => {\n                        return prevState.pokeList.push(response);\n                    });\n                };\n            }\n        } catch(error) {\n            console.log(error);\n        };\n    };\n\n    loadMorePokemon = async () => { //NOTE::: pokeLimit and any hardcoded number in this function will need to be updated manually\n        if (this.state.listMode !== 'default') { //refresh list\n            this.setState({listMode: 'default'});\n            this.setState({pokeList: []});\n            this.populatePokeList(this.state.pokeLimit);\n        } else { //load more like usual\n            //empty array to loop over els for API calls\n            let emptyArr = [];\n\n            //filling array with every number needed for API calls: currently 893 pokemon\n            for (let i = this.state.pokeLimit + 1; i <= this.state.pokeLimit + 25; i++) {\n                emptyArr.push(i);\n            };\n\n            //updating pokeLimit for incrimental/repeat usage\n            this.setState((prevState) => {\n                return prevState.pokeLimit += 25;\n            });\n\n            //loop through emptyArr to numerically call data for each pokemon in order and push into pokeList state\n            for (const el of emptyArr) {\n                const pokemon = await pokeapi.get(`/pokemon/${el}`);\n                if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                    this.setState((prevState) => {\n                        return prevState.pokeList.push(pokemon);\n                    });\n                } \n            };\n        }\n    };\n\n    loadAllPokemon = async () => {\n        //empty array to loop over els for API calls\n        let emptyArr = [];\n\n        //filling array with every number needed for API calls: currently 893 pokemon\n        for (let i = this.state.pokeLimit; i <= 893; i++) {\n            emptyArr.push(i);\n        };\n\n        this.setState({pokeLimit: 893});\n\n        //loop through emptyArr to numerically call data for each pokemon in order and push into pokeList state\n        for (const el of emptyArr) {\n            const pokemon = await pokeapi.get(`/pokemon/${el}`);\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeList.push(pokemon);\n                });\n            };\n        };\n    };\n\n    loadGen = async(gen) => {\n        try {\n            if (this.state.listMode !== 'gen') {\n                this.setState({listMode: 'gen'});\n            };\n    \n            this.setState({pokeList: []});\n    \n            const response = await pokeapi.get(`/generation/${gen}`); \n\n            for (let i = 0; i < response.data.pokemon_species.length; i++) {\n                const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n                if (pokemon.data.id >= 893) {\n                    console.log(`All gen ${gen} pokemon entries rendered`);\n                    console.log(`Current entries in mounted component: ${this.state.pokeList.length}`);\n                    break; \n                };\n    \n                if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                    this.setState((prevState) => {\n                        return prevState.pokeList.push(pokemon);\n                    });\n                };\n            };\n\n        } catch (error) {\n            console.log(error);\n        };\n    };\n\n    render() {\n        return(\n            <main>\n                <SearchBar\n                    onSubmit={this.onSearchSubmit}\n                />\n                <Welcome />\n                <PokeCard\n                    entries={this.state.pokeList} //all pokemon api data\n                />\n                <LoaderButtons \n                    limit={this.state.pokeLimit}\n                    loadNext={this.loadMorePokemon}\n                    loadAll={this.loadAllPokemon}\n                    listMode={this.state.listMode}\n                    loadGen={this.loadGen}\n                />\n            </main>\n        ) \n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/_base.scss';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}