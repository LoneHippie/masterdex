{"version":3,"sources":["components/PokeCard.js","images/bug.svg","images/dark.svg","images/dragon.svg","images/electric.svg","images/fairy.svg","images/fighting.svg","images/fire.svg","images/flying.svg","images/ghost.svg","images/grass.svg","images/ground.svg","images/ice.svg","images/normal.svg","images/poison.svg","images/psychic.svg","images/rock.svg","images/steel.svg","images/water.svg","components/PokeCardFull.js","components/PokeCardMini.js","api/pokeapi.js","components/Welcome.js","components/SearchSuggestions.js","components/SearchBar.js","components/LoaderButtons.js","components/App.js","index.js"],"names":["PokeCard","props","styles","gradient_normal","gradient_fire","gradient_water","gradient_electric","gradient_grass","gradient_ice","gradient_fighting","gradient_poison","gradient_ground","gradient_flying","gradient_psychic","gradient_bug","gradient_rock","gradient_ghost","gradient_dragon","gradient_dark","gradient_steel","gradient_fairy","solid_normal","solid_fire","solid_water","solid_electric","solid_grass","solid_ice","solid_fighting","solid_poison","solid_ground","solid_flying","solid_psychic","solid_bug","solid_rock","solid_ghost","solid_dragon","solid_dark","solid_steel","solid_fairy","textColor","type","getContrastBg","typeListIcons","input","types","bug","Bug","dark","Dark","dragon","Dragon","electric","Electric","fairy","Fairy","fighting","Fighting","fire","Fire","flying","Flying","ghost","Ghost","grass","Grass","ground","Ground","ice","Ice","normal","Normal","poison","Poison","psychic","Psychic","rock","Rock","steel","Steel","water","Water","i","length","push","name","map","index","className","src","eval","alt","typeListText","style","background","border","abilityListText","abilities","ability","openFullDisplay","e","document","getElementById","target","id","display","closeFullDisplay","closeDisplayViaX","slice","allCards","pokeData","el","value","pokemon","pokemonIndex","onClick","moves","moveData","PokeCardFull","useState","gen","setGen","initGen","generation","typeName","nameJp","names","filter","language","toggleDisplay","checkStatus","statDisplay","moveDisplay","checked","type_id","forEach","version_group_details","version_group","statBars","stats","percentage","max","jsx","getTotalStats","this","reduce","acc","base_stat","perc","String","width","htmlFor","getGenSelect","selectOptions","firstGen","selected","movesLevel","move_learn_method","movesMachine","movesTutor","movesEgg","movePool","parseInt","move","url","generation_id","moveTypeColor","find","movePP","pp","moveCategory","curMove","damage_class_id","sort","a","b","level_learned_at","color","height","weight","sprites","front_default","console","log","onChange","PokeCardMini","axios","create","baseURL","Welcome","SearchSuggestions","suggestionsList","entries","includes","query","clickFill","isFocused","SearchBar","state","term","pokeList","getAllEntries","pokeapi","get","pokeEntries","allPokeEntries","data","results","setState","onFormSubmit","event","preventDefault","onSubmit","handleWindowClick","window","addEventListener","autoComplete","spellCheck","placeholder","replace","toLowerCase","onFocus","innerHTML","React","Component","LoaderButtons","loadNext","limit","listMode","loadGen","disabled","App","pokeLimit","currentList","typeSearch","genSearch","populatePokeData","emptyArr","species","prevState","loadMorePokemon","searchByType","getTypeFire","getTypeNormal","getTypeGrass","getTypeWater","getTypeFighting","getTypeFlying","getTypePoison","getTypeGround","getTypeRock","getTypeBug","getTypeGhost","getTypeElectric","getTypePsychic","getTypeIce","getTypeDragon","getTypeDark","getTypeSteel","getTypeFairy","response","onSearchSubmit","params","parent","querySelector","setTimeout","childNodes","lastElementChild","searchByGen","getGen1","getGen2","getGen3","getGen4","getGen5","getGen6","getGen7","getGen8","pokemon_species","error","require","ReactDOM","render"],"mappings":"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","file":"static/js/main.a26b02e1.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/_pokecard.scss';\nimport '../styles/_svg_icons.scss';\n\nimport Bug from '../images/bug.svg';\nimport Dark from '../images/dark.svg';\nimport Dragon from '../images/dragon.svg';\nimport Electric from '../images/electric.svg';\nimport Fairy from '../images/fairy.svg';\nimport Fighting from '../images/fighting.svg';\nimport Fire from '../images/fire.svg';\nimport Flying from '../images/flying.svg';\nimport Ghost from '../images/ghost.svg';\nimport Grass from '../images/grass.svg';\nimport Ground from '../images/ground.svg';\nimport Ice from '../images/ice.svg';\nimport Normal from '../images/normal.svg';\nimport Poison from '../images/poison.svg';\nimport Psychic from '../images/psychic.svg';\nimport Rock from '../images/rock.svg';\nimport Steel from '../images/steel.svg';\nimport Water from '../images/water.svg';\n\nimport PokeCardFull from './PokeCardFull';\nimport PokeCardMini from './PokeCardMini';\n\nconst PokeCard = (props) => {\n\n    //style object for card backgrounds\n    let styles = {\n        gradient_normal: \"linear-gradient(to top left, rgba(169, 169, 169, 0.95), rgba(169, 169, 169, 0.6))\",\n        gradient_fire: \"linear-gradient(to top left, rgba(238, 129, 48, 0.95), rgba(238, 129, 48, 0.6))\",\n        gradient_water: \"linear-gradient(to top left, rgba(99, 144, 240, 0.95), rgba(99, 144, 240, 0.6))\",\n        gradient_electric: \"linear-gradient(to top left, rgba(247, 208, 44, 0.95), rgba(247, 208, 44, 0.6))\",\n        gradient_grass: \"linear-gradient(to top left, rgba(122, 199, 76, 0.95), rgba(122, 199, 76, 0.6))\",\n        gradient_ice: \"linear-gradient(to top left, rgba(150, 217, 214, 0.95), rgba(150, 217, 214, 0.6))\",\n        gradient_fighting: \"linear-gradient(to top left, rgba(194, 46, 40, 0.95), rgba(194, 46, 40, 0.6))\",\n        gradient_poison: \"linear-gradient(to top left, rgba(163, 62, 161, 0.95), rgba(163, 62, 161, 0.6))\",\n        gradient_ground: \"linear-gradient(to top left, rgba(226, 191, 101, 0.95), rgba(226, 191, 101, 0.6))\",\n        gradient_flying: \"linear-gradient(to top left, rgba(169, 143, 243, 0.95), rgba(169, 143, 243, 0.6))\",\n        gradient_psychic: \"linear-gradient(to top left, rgba(249, 85, 135, 0.95), rgba(249, 85, 135, 0.6))\",\n        gradient_bug: \"linear-gradient(to top left, rgba(166, 185, 26, 0.95), rgba(166, 185, 26, 0.6))\",\n        gradient_rock: \"linear-gradient(to top left, rgba(182, 161, 54, 0.95), rgba(182, 161, 54, 0.6))\",\n        gradient_ghost: \"linear-gradient(to top left, rgba(115, 87, 151, 0.95), rgba(115, 87, 151, 0.6))\",\n        gradient_dragon: \"linear-gradient(to top left, rgba(111, 53, 252, 0.95), rgba(111, 53, 252, 0.6))\",\n        gradient_dark: \"linear-gradient(to top left, rgba(112, 87, 70, 0.95), rgba(112, 87, 70, 0.6))\",\n        gradient_steel: \"linear-gradient(to top left, rgba(183, 183, 206, 0.95), rgba(183, 183, 206, 0.6))\",\n        gradient_fairy: \"linear-gradient(to top left, rgba(214, 133, 173, 0.95), rgba(214, 133, 173, 0.6))\",\n\n        solid_normal: \"rgba(169, 169, 169)\",\n        solid_fire: \"rgba(238, 129, 48)\",\n        solid_water: \"rgba(99, 144, 240)\",\n        solid_electric: \"rgba(247, 208, 44)\",\n        solid_grass: \"rgba(122, 199, 76)\",\n        solid_ice: \"rgba(150, 217, 214)\",\n        solid_fighting: \"rgba(194, 46, 40)\",\n        solid_poison: \"rgba(163, 62, 161)\",\n        solid_ground: \"rgba(226, 191, 101)\",\n        solid_flying: \"rgba(169, 143, 243)\",\n        solid_psychic: \"rgba(249, 85, 135)\",\n        solid_bug: \"rgba(166, 185, 26)\",\n        solid_rock: \"rgba(182, 161, 54)\",\n        solid_ghost: \"rgba(115, 87, 151)\",\n        solid_dragon: \"rgba(111, 53, 252)\",\n        solid_dark: \"rgba(112, 87, 70)\",\n        solid_steel: \"rgba(183, 183, 206)\",\n        solid_fairy: \"rgba(214, 133, 173)\"\n    };\n\n    //text color changer for managing background contrast\n    const textColor = (type) => {\n        if (type === 'grass' || type === 'water' || type === 'poison' || type === 'fighting' || type === 'dragon' || type === 'dark' || type === 'ghost' || type === 'psychic') {\n            return '#DCDCDC';\n        } else {\n            return '#2F4F4F';\n        };\n    };\n\n    //for getting the inverse bg color of the text color\n    const getContrastBg = (type) => {\n        if (type === 'grass' || type === 'water' || type === 'poison' || type === 'fighting' || type === 'dragon' || type === 'dark' || type === 'ghost' || type === 'psychic') {\n            return '#2F4F4F';\n        } else {\n            return '#DCDCDC';\n        };\n    }\n\n    //function for getting JSX img list of type icons\n    const typeListIcons = (input) => {\n        let types = [];\n\n        //re-assigning imported variables to local variables for easier use\n        const [bug, dark, dragon, electric, fairy, fighting, fire, flying, ghost, grass, ground, ice, normal, poison, psychic, rock, steel, water] = [Bug, Dark, Dragon, Electric, Fairy, Fighting, Fire, Flying, Ghost, Grass, Ground, Ice, Normal, Poison, Psychic, Rock, Steel, Water];\n\n        for (let i = 0; i < input.length; i++) {\n            types.push(input[i].type.name);\n        };\n\n        return types.map((input, index) => <img key={`pk-type-icon-${index}`} className={`icon ${input}`} src={eval(input)} alt={`${input} icon`}/>);\n    };\n\n     //function for getting JSX div list of type names\n    const typeListText = (input, type) => {\n        let types = [];\n\n        for (let i = 0; i < input.length; i++) {\n            types.push(input[i].type.name);\n        };\n\n        return types.map((input, index) => \n            <div key={`pk-type-text-${index}`} className=\"pokecard-full__general-info__type-container--type\" style={{background: eval(`styles.gradient_${input}`), border: `2px solid ${textColor(type)}`}}>\n                {input}\n            </div>\n        );\n    };\n\n    //function for getting JSX div list of ability names\n    const abilityListText = (input, type) => {\n        let abilities = [];\n\n        for (let i = 0; i < input.length; i++) {\n            abilities.push(input[i].ability.name);\n        };\n\n        return abilities.map((input, index) => \n            <div key={`pk-ability-text-${index}`} className=\"pokecard-full__general-info__ability-container--ability\" style={{background: getContrastBg(type), border: `2px solid ${textColor(type)}`}}>\n                {input}\n            </div>\n        );\n    };\n\n    //functions for click events toggling display for full pokemon cards\n    function openFullDisplay(e) {\n        document.getElementById(`full-display-${e.target.id}`).style.display = \"flex\";\n        document.getElementById(`display-${e.target.id}`).style.display = \"block\";\n    };\n    function closeFullDisplay(e) { //need to target id='display-pk-{pokemon.data.id}, id='full-display-pk-{pokemon.data.id}'\n        document.getElementById(`full-${e.target.id}`).style.display = \"none\";\n        document.getElementById(`${e.target.id}`).style.display = \"none\";\n    };\n    function closeDisplayViaX(e) {\n        document.getElementById(`full-${e.target.id.slice(6)}`).style.display = \"none\";\n        document.getElementById(`${e.target.id.slice(6)}`).style.display = \"none\";\n    };\n\n    //function for creating all ui cards by looping through prop data passed from App.js\n    const allCards = props.pokeData.map((el, value) => {\n\n        return (\n            <article className=\"pokemon\" key={`pokemon-entry-${value}`} id=\"pokemon-gen-point\">\n\n                <PokeCardMini \n                    pokemon={el}\n                    pokemonIndex={value}\n                    styles={styles}\n                    textColor={textColor}\n                    typeListIcons={typeListIcons}\n                    openFullDisplay={openFullDisplay}\n                />\n\n                <section \n                    key={`pokemon-full-${value}-blur`}\n                    className=\"full-card-blur\"\n                    id={`display-pk-${el.id}`}\n                    onClick={closeFullDisplay}>\n                </section>\n\n                <PokeCardFull \n                    pokemon={el}\n                    pokemonIndex={value}\n                    moves={props.moveData}\n                    styles={styles}\n                    textColor={textColor}\n                    getContrastBg={getContrastBg}\n                    typeListText={typeListText}\n                    abilityListText={abilityListText}\n                    closeFullDisplay={closeDisplayViaX} //special function for closing full display specifically with X button\n                />\n\n            </article>\n        );\n    });\n\n    return(\n        <div className='main-display'>\n            {allCards}\n        </div>\n    );\n};\n\nexport default PokeCard;","export default __webpack_public_path__ + \"static/media/bug.204df919.svg\";","export default __webpack_public_path__ + \"static/media/dark.27fdc7ed.svg\";","export default __webpack_public_path__ + \"static/media/dragon.9d32757b.svg\";","export default __webpack_public_path__ + \"static/media/electric.bc35c5a3.svg\";","export default __webpack_public_path__ + \"static/media/fairy.767c2f56.svg\";","export default __webpack_public_path__ + \"static/media/fighting.f20d1bd2.svg\";","export default __webpack_public_path__ + \"static/media/fire.e0bd7fca.svg\";","export default __webpack_public_path__ + \"static/media/flying.d1778503.svg\";","export default __webpack_public_path__ + \"static/media/ghost.ddf26831.svg\";","export default __webpack_public_path__ + \"static/media/grass.e09623e3.svg\";","export default __webpack_public_path__ + \"static/media/ground.e567f4fc.svg\";","export default __webpack_public_path__ + \"static/media/ice.cd2f9043.svg\";","export default __webpack_public_path__ + \"static/media/normal.2ba66dd5.svg\";","export default __webpack_public_path__ + \"static/media/poison.43956925.svg\";","export default __webpack_public_path__ + \"static/media/psychic.67439878.svg\";","export default __webpack_public_path__ + \"static/media/rock.61a8428d.svg\";","export default __webpack_public_path__ + \"static/media/steel.cb91a92a.svg\";","export default __webpack_public_path__ + \"static/media/water.b6d13329.svg\";","import React, { useState } from 'react';\nimport '../styles/_pokecard__full.scss';\nimport '../styles/_pokecard__full--detailed-info.scss';\n\nconst PokeCardFull = (props) => {\n\n    //Note 2/12/20 ::: cool new properties to get info from:\n        //pokemon.genera[7](7 is english).genus - string describing pokemon genus ('Seed Pokemon', 'Embrace Pokemon', etc)\n        //pokemon.is_legendary/.is_mythical - returns true/false for these\n\n    const { pokemon, pokemonIndex, moves, styles, textColor, getContrastBg, typeListText, abilityListText } = props;\n    const [gen, setGen] = useState(1);\n\n    //initializes gen hook for each pokemon\n    function initGen(input) {\n        switch(true) {\n            case input.generation.name === 'generation-i':\n                return setGen(1);\n            case input.generation.name === 'generation-ii':\n                return setGen(2);\n            case input.generation.name === 'generation-iii':\n                return setGen(3);\n            case input.generation.name === 'generation-iv':\n                return setGen(4);\n            case input.generation.name === 'generation-v':\n                return setGen(5);\n            case input.generation.name === 'generation-vi':\n                return setGen(6);\n            case input.generation.name === 'generation-vii':\n                return setGen(7);\n            case input.generation.name === 'generation-viii':\n                return setGen(8);\n        };\n    };\n    initGen(pokemon);\n\n    //primary type name for pokemon\n    let typeName = pokemon.types[0].type.name;\n\n    //japanese string name for pokemon\n    let nameJp = pokemon.names.filter((el => el.language.name === 'ja-Hrkt'));\n    nameJp = nameJp[0].name;\n\n    //change moves.type_id from number to type string value for styling purposes\n    moves.map(el => {\n        switch (true) {\n            case el.type_id === 1:\n                return el.type_id = 'normal';\n            case el.type_id === 2:\n                return el.type_id = 'fighting';\n            case el.type_id === 3:\n                return el.type_id = 'flying';\n            case el.type_id === 4:\n                return el.type_id = 'poison';\n            case el.type_id === 5:\n                return el.type_id = 'ground';\n            case el.type_id === 6:\n                return el.type_id = 'rock';\n            case el.type_id === 7:\n                return el.type_id = 'bug';\n            case el.type_id === 8:\n                return el.type_id = 'ghost';\n            case el.type_id === 9:\n                return el.type_id = 'steel';\n            case el.type_id === 10:\n                return el.type_id = 'fire';\n            case el.type_id === 11:\n                return el.type_id = 'water';\n            case el.type_id === 12:\n                return el.type_id = 'grass';\n            case el.type_id === 13:\n                return el.type_id = 'electric';\n            case el.type_id === 14:\n                return el.type_id = 'psychic';\n            case el.type_id === 15:\n                return el.type_id = 'ice';\n            case el.type_id === 16:\n                return el.type_id = 'dragon';\n            case el.type_id === 17:\n                return el.type_id = 'dark';\n            case el.type_id === 18:\n                return el.type_id = 'fairy';\n        };\n    });\n\n    //changes pokemon.moves.move.version_group_details.version_group.name to number equal to gen\n    pokemon.moves.forEach(el => {\n        el.version_group_details.map(el => {\n            switch(true) {\n                case el.version_group.name === 'red-blue':\n                    return el.version_group.name = 1;\n                case el.version_group.name === 'yellow':\n                    return el.version_group.name = 1;\n                case el.version_group.name === 'gold-silver':\n                    return el.version_group.name = 2;\n                case el.version_group.name === 'crystal':\n                    return el.version_group.name = 2;\n                case el.version_group.name === 'ruby-sapphire':\n                    return el.version_group.name = 3;\n                case el.version_group.name === 'emerald':\n                    return el.version_group.name = 3;\n                case el.version_group.name === 'firered-leafgreen':\n                    return el.version_group.name = 3;\n                case el.version_group.name === 'diamond-pearl':\n                    return el.version_group.name = 4;\n                case el.version_group.name === 'platinum':\n                    return el.version_group.name = 4;\n                case el.version_group.name === 'heartgold-soulsilver':\n                    return el.version_group.name = 4;\n                case el.version_group.name === 'black-white':\n                    return el.version_group.name = 5;\n                case el.version_group.name === 'black-2-white-2':\n                    return el.version_group.name = 5;\n                case el.version_group.name === 'x-y':\n                    return el.version_group.name = 6;\n                case el.version_group.name === 'omega-ruby-alpha-sapphire':\n                    return el.version_group.name =6;\n                case el.version_group.name === 'sun-moon':\n                    return el.version_group.name = 7;\n                case el.version_group.name === 'ultra-sun-ultra-moon':\n                    return el.version_group.name = 7;\n            };\n        });\n    });\n\n    //closest I've got it to working so far. Disabled for current push to master\n    // pokemon.moves.forEach(move => {\n    //     move.version_group_details.map((el, val) => {\n    //         switch(true) {\n    //             case el.move_learn_method.name === 'level-up' && el.version_group.name === gen:\n    //                 return move.genIndex = val;\n    //         };\n    //     });\n    // });\n\n    //function for toggling between base stat and move pool view\n    function toggleDisplay() {\n        let checkStatus = document.getElementById(`switch-${pokemonIndex}`);\n        let statDisplay = document.getElementById(`stat-display-${pokemonIndex}`);\n        let moveDisplay = document.getElementById(`move-display-${pokemonIndex}`);\n\n        if (checkStatus.checked === false) {\n            statDisplay.style.display = \"flex\";\n            moveDisplay.style.display = \"none\";\n        } else {\n            statDisplay.style.display = \"none\";\n            moveDisplay.style.display = \"flex\";\n        };\n    };\n\n    //function for getting JSX for stat bars. Starting point = el.data.stats for input\n    const statBars = (input, type) => {\n        let stats = {\n            name: ['HP', 'Attack', 'Defense', 'Sp. Atk', 'Sp. Def', 'Speed', 'Total'], //name of each stat including \"total\"\n            value: [], //value for each individual stat\n            percentage: [], //percentage for width styling\n            max: [255, 165, 230, 154, 230, 160, 720], //max value of each stat\n            jsx: [], //jsx elements to  be returned later\n\n            getTotalStats: function() {\n                let max = this.value.reduce((el, acc) => el + acc);\n                this.value.push(max);\n            }\n        };\n\n        //getting data per pokemon for stat values\n        for (let i = 0; i < input.length; i++) {\n            stats.value.push(input[i].base_stat);\n        };\n\n        stats.getTotalStats();\n\n        for (let i = 0; i < stats.value.length; i++) {\n            let perc;\n\n            perc = (stats.value[i] / stats.max[i]) * 100;\n            perc = perc + '%';\n\n            stats.percentage.push(String(perc));\n        };\n\n        for (let i = 0; i < stats.value.length; i++) {\n            stats.jsx.push(\n                <div className=\"stat\" key={`stat-${stats.name[i]}`}>\n                    <div className=\"stat__container\" key={`stat-container-${stats.name[i]}`} style={{border: `2px solid ${textColor(typeName)}`}}>\n                        <div className=\"stat__container--stat\" key={`stat-bar-${stats.name[i]}`} id={`stat-bar-${stats.name[i]}`} style={{width: stats.percentage[i], background: getContrastBg(typeName)}}>\n                            <strong className=\"stat__container--stat--value\" key={`stat-bar-value-${stats.name[i]}`}>{stats.value[i]}</strong>\n                        </div>\n                    </div>\n                    <label className=\"stat--label\" key={`stat-label-${stats.name[i]}`} htmlFor={`stat-bar-${stats.name[i]}`}>\n                        {stats.name[i]}\n                    </label>\n                </div>\n            );\n        };\n\n        return stats.jsx; //array of jsx generated from for looping over stats obj\n        \n    };    \n\n    const getGenSelect = (input) => {\n\n        //changes current pokemon.generation.name to number value corresponding to generation number\n        switch(true) {\n            case input.generation.name === 'generation-i':\n                return input.generation.name = 1;\n            case input.generation.name === 'generation-ii':\n                return input.generation.name = 2;\n            case input.generation.name === 'generation-iii':\n                return input.generation.name = 3;\n            case input.generation.name === 'generation-iv':\n                return input.generation.name = 4;\n            case input.generation.name === 'generation-v':\n                return input.generation.name = 5;\n            case input.generation.name === 'generation-vi':\n                return input.generation.name = 6;\n            case input.generation.name === 'generation-vii':\n                return input.generation.name = 7;\n            case input.generation.name === 'generation-viii':\n                return input.generation.name = 8;\n        };\n\n        //empty array to push JSX elements\n        let selectOptions = [];\n        //first geneation current pokemon appears in\n        const firstGen = input.generation.name;\n        //initial select option for firstGen, selected by default on load\n        selectOptions.push(<option key={`gen-select-${firstGen}`} value={firstGen} selected>{`Gen ${firstGen}`}</option>);\n\n        //pushing new select options in for each gen between firstGen and gen 8\n        if (firstGen !== 8) {\n            for (let i = (firstGen + 1); i <= 8; i++) {\n                selectOptions.push(\n                    <option key={`gen-select-${i}`} value={i}>{`Gen ${i}`}</option>\n                );\n            };\n        };\n\n        return selectOptions;\n    };\n\n    //splitting current pokemon move list by learn method for organization\n    const movesLevel = pokemon.moves.filter(el => el.version_group_details[0].move_learn_method.name === 'level-up');\n    const movesMachine = pokemon.moves.filter(el => el.version_group_details[0].move_learn_method.name === 'machine');\n    const movesTutor = pokemon.moves.filter(el => el.version_group_details[0].move_learn_method.name === 'tutor');\n    const movesEgg = pokemon.moves.filter(el => el.version_group_details[0].move_learn_method.name === 'egg');\n\n    //function for generation move pool\n    const movePool = (input) => { //input = pokemon.moves, eventually replace the index for method and details with gen index\n\n        //filters out moves that don't exist in whatever gen is currently selected per pokemon\n        input = input.filter((el) => {\n            let id = parseInt(el.move.url.slice(31).slice(0, -1), 10);\n\n            if (moves[id].generation_id <= gen) {\n                return el;\n            };\n        });\n\n        //this can be used for styling specific to move type\n        const moveTypeColor = (el) => {\n            let id = parseInt(el.move.url.slice(31).slice(0, -1), 10);\n\n            const curMove = moves.find((el) => {\n                return el.id === id;\n            });\n\n            return curMove.type_id;\n        };\n\n        //gets PP value for each move\n        const movePP = (el) => {\n            let id = parseInt(el.move.url.slice(31).slice(0, -1), 10);\n\n            const curMove = moves.find((el) => {\n                return el.id === id;\n            });\n\n            return curMove.pp;\n        };\n\n        //gets category of each move (status, physical, special)\n        const moveCategory = (el) => {\n            let id = parseInt(el.move.url.slice(31).slice(0, -1), 10);\n\n            const curMove = moves.find((el) => {\n                return el.id === id;\n            });\n\n            if (curMove.damage_class_id === 1) {\n                return 'Status';\n            } else if (curMove.damage_class_id === 2) {\n                return 'Phsycial';\n            } else {\n                return 'Special';\n            };\n        };\n\n        //sorting all moves first by learn method, then by level\n        input.sort((a, b) => {\n            return b.version_group_details[0].move_learn_method.name.length - a.version_group_details[0].move_learn_method.name.length;\n        });\n\n        input.sort((a, b) => {\n            if (a.version_group_details[0].move_learn_method.name === 'level-up') {\n                return a.version_group_details[0].level_learned_at - b.version_group_details[0].level_learned_at;\n            } else {\n                return 0;\n            }\n        });\n\n        // let genIndex = (el) => el.genIndex === undefined ? 0 : el.genIndex;\n\n        return input.map((el, index) => \n            <div className=\"move\" key={`pk-move-${index}`} style={{background: eval(`styles.gradient_${moveTypeColor(el)}`), color: textColor(moveTypeColor(el)), border: `2px solid ${textColor(typeName)}`}}>\n                <div className=\"move__info\" key={`pk-move-info-top-${index}`}>\n                    <span className=\"move__info--learn-lvl\" key={`pk-learn-level-${index}`}>\n                        lvl {el.version_group_details[0].level_learned_at === 0 ? '-' : el.version_group_details[0].level_learned_at}\n                    </span>\n                    <span className=\"move__info--learn-method\" key={`pk-learn-method-${index}`}>\n                        {el.version_group_details[0].move_learn_method.name}\n                    </span>\n                </div>\n                <div className=\"move--name\" key={`pk-move-${index}`}>\n                    {el.move.name}\n                </div>\n                <div className=\"move__info\" key={`pk-move-info-bottom-${index}`}>\n                    <span className=\"move__info--pp\">\n                        {movePP(el)} PP\n                    </span>\n                    <span className=\"move__info--category\">\n                        {moveCategory(el)}\n                    </span>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <section className=\"pokecard-full\" key={`pokemon-full-${pokemonIndex}`} id={`full-display-pk-${pokemon.id}`} style={{background: eval(`styles.solid_${typeName}`)}}>\n\n            <strong className=\"pokecard-full--exit\" style={{color: textColor(typeName)}} id={`close-display-pk-${pokemon.id}`} onClick={props.closeFullDisplay}>x</strong>\n                    \n            <div className=\"pokecard-full__general-info\" style={{color: textColor(typeName)}}>\n\n                <div className=\"pokecard-full__general-info--id\">{`Game ID: #${pokemon.id}`}</div>\n                <div className=\"pokecard-full__general-info--height\">{`Height: ${pokemon.height / 10}m`}</div>\n                <div className=\"pokecard-full__general-info--weight\">{`Weight: ${pokemon.weight / 10}kg`}</div>\n\n                <div className=\"pokecard-full__general-info__type-container\">\n                    <span>Type:</span>\n                    <div style={{color: textColor(typeName)}}>\n                        {typeListText(pokemon.types, typeName)}\n                    </div>\n                </div>\n\n                <div className=\"pokecard-full__general-info__ability-container\">\n                    <span>Abilities:</span>\n                    <div className=\"ability-flex-container\" >\n                        {abilityListText(pokemon.abilities, typeName)}\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"pokecard-full__visual\">\n\n                <div className=\"pokecard-full__visual--name\" key={`pk-name-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {pokemon.name}\n                </div>\n\n                <div className=\"pokecard-full__visual--name-jp\" key={`pk-name-jp-${pokemonIndex}`} style={{color: pokemon.color.name}}>\n                    {nameJp}\n                </div>\n\n                <img\n                    key={`pk-sprite-${pokemonIndex}`}\n                    src={pokemon.sprites.front_default}\n                    alt={`sprite for ${pokemon.name}`}\n                    className=\"pokecard-full__visual--sprite\"\n                    style={{filter: `drop-shadow(1.5px 3px 3px #2F4F4F`}}\n                    onClick={() => console.log(pokemon)}\n                />\n\n            </div>\n\n            <div className=\"pokecard-full__detailed-info\">\n\n                <section className=\"info-toggle\" style={{color: textColor(typeName)}}>\n                    <span className=\"info-toggle--current-label\">Stats</span>\n                    <input type=\"checkbox\" id={`switch-${pokemonIndex}`} className=\"info-toggle--switch\" onChange={toggleDisplay}/>\n                    <label htmlFor={`switch-${pokemonIndex}`} className=\"info-toggle--switch--label\"></label>\n                    <span className=\"info-toggle--current-label\">Moves</span>\n                </section>\n                \n                <section className=\"stat-display\" id={`stat-display-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {statBars(pokemon.stats)}\n                </section>\n\n                <section className=\"move-display\" id={`move-display-${pokemonIndex}`}>\n\n                    <div className=\"move-display__custom-select\">\n                        <select\n                            className=\"move-display__custom-select--gens\"\n                            style={{\n                                color: textColor(typeName),\n                                background: getContrastBg(typeName),\n                                border: `2px solid ${textColor(typeName)}`\n                            }}\n                            onChange={(e) => setGen(e.target.value)}\n                        >\n                            {getGenSelect(pokemon)}\n                        </select>\n                    </div>\n\n                    <span className=\"move-display--title\" style={{color: textColor(typeName)}}>\n                        {movePool(movesLevel).length === 0 ? '' : 'Learned Naturally:'}\n                    </span>\n                    <div className=\"move-display--section\">\n                        {movePool(movesLevel)}\n                    </div>\n\n                    <span className=\"move-display--title\" style={{color: textColor(typeName)}}>\n                        {movePool(movesMachine).length === 0 ? '' : 'TM/TM:'}\n                    </span>                   \n                    <div className=\"move-display--section\">\n                        {movePool(movesMachine)}\n                    </div>\n\n                    <span className=\"move-display--title\" style={{color: textColor(typeName)}}>\n                        {movePool(movesTutor).length === 0 ? '' : 'Tutor Moves:'}\n                    </span>\n                    <div className=\"move-display--section\">\n                        {movePool(movesTutor)}\n                    </div>\n\n                    <span className=\"move-display--title\" style={{color: textColor(typeName)}}>\n                        {movePool(movesEgg).length === 0 ? '' : 'Egg Moves:'}\n                    </span>                   \n                    <div className=\"move-display--section\">\n                        {movePool(movesEgg)}\n                    </div>    \n\n                </section>\n\n            </div>\n\n        </section>\n    );\n\n};\n\nexport default PokeCardFull;","import React from 'react';\nimport '../styles/_pokecard.scss';\n\nconst PokeCardMini = (props) => {\n\n    const { pokemon, pokemonIndex, styles, textColor, typeListIcons, openFullDisplay } = props;\n\n    let typeName = pokemon.types[0].type.name;\n\n    return (\n        <section key={`pokemon-mini-${pokemonIndex}`} className=\"main-display__pokecard\" style={{background: eval(`styles.gradient_${typeName}`)}} onClick={openFullDisplay}>\n\n            <div className=\"main-display__pokecard__info\" key={`pk-info-display-${pokemonIndex}`}>\n                <div key={`pk-types-${pokemonIndex}`} className=\"main-display__pokecard__info--types\">\n                    {typeListIcons(pokemon.types)}\n                </div>\n                <div className=\"main-display__pokecard__info--number\" key={`pk-id-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                    {`#${pokemon.id}`}\n                </div>\n            </div>\n\n            <img\n                key={`pk-sprite-${pokemonIndex}`}\n                src={pokemon.sprites.front_default}\n                alt={`sprite for ${pokemon.name}`}\n                className=\"main-display__pokecard--sprite\"\n                style={{filter: `drop-shadow(1.5px 3px 3px #2F4F4F`}}\n            />\n\n            <div className=\"main-display__pokecard--name\" key={`pk-name-${pokemonIndex}`} style={{color: textColor(typeName)}}>\n                {pokemon.name}\n            </div>\n\n            <div\n                key={`pokemon-selector-${pokemon.id}`}\n                id={`pk-${pokemon.id}`}\n                className=\"pokecard--mask\">\n            </div>\n\n        </section>\n    );\n\n};\n\nexport default PokeCardMini;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/'\n});","import React from 'react';\nimport '../styles/_welcome.scss';\n\nconst Welcome = () => {\n\n    function closeWelcome() {\n        document.getElementById('welcome').style.display = \"none\";\n    };\n    \n    return (\n        <section className=\"welcome\" id=\"welcome\">\n\n            <article className=\"welcome-container\">\n                <h1 className=\"welcome-container--title\">WELCOME&nbsp;TRAINER</h1>\n                <p className=\"welcome-container--paragraph\">\n                    Welcome to Masterdex, a handly detailed pokedex webapp! Here you can find detailed information on any pokemon from every generation either by search or browsing. If this is your first time using Masterdex, please read the instructions below before hitting continue.\n                </p>\n                <h2 className=\"welcome-container--instruction-title\">SEARCHING</h2>\n                <ul className=\"welcome-container__instruction-list\">\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To find a specific pokemon, just enter a name in the search bar\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        You can also use the search bar to show all pokemon that match a certain type by searching for that type by name, eg. \"fire\", \"fighting\", \"fairy\"\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        At the bottom of the screen you can also show all pokemon from a specific game generation by simply selecting that generation from the list\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To show more pokemon in sequential order, just click the \"SHOW MORE\" button\n                    </li>\n                </ul>\n                <h2 className=\"welcome-container--instruction-title\">DETAILED&nbsp;INFO</h2>\n                <ul className=\"welcome-container__instruction-list\">\n                    <li className=\"welcome-container__instruction-list--item\">\n                        To get detailed info about any pokemon, click the card displayed on screen to open a full display of that pokemon's details, moves and stats\n                    </li>\n                    <li className=\"welcome-container__instruction-list--item\">\n                        NOTE: abilities and moves for generation 8 pokemon are currently unavailable\n                    </li>\n                </ul>\n\n                <div className=\"welcome-container__btn\" onClick={closeWelcome}>\n                    Continue\n                </div>\n            </article>\n\n            <div className=\"welcome-blur\"></div>\n\n        </section>\n    );\n};\n\nexport default Welcome;","import React from 'react';\nimport '../styles/_suggestions.scss';\n\nconst SearchSuggestions = (props) => {\n\n    const suggestions = props.entries.filter(el => el.name.includes(props.query));\n\n    const suggestionsList = suggestions.map((el, value) => {\n        if (props.query !== '') {\n            return (\n                <li key={value} className=\"suggestions__item\">\n                    <span className=\"suggestions-span\" onClick={props.clickFill}>{el.name}</span>\n                </li>\n            );\n        }\n    });\n\n    return (\n        <ul className=\"suggestions\" style={{display: props.isFocused}} id=\"suggestions-ul\">\n            {suggestionsList}\n        </ul>\n    );\n};\n\nexport default SearchSuggestions;","import React from 'react';\nimport pokeapi from '../api/pokeapi';\nimport SearchSuggestions from './SearchSuggestions';\n\nimport '../styles/_searchbar.scss';\n\nclass SearchBar extends React.Component {\n\n    state = {term: '', pokeList: [], isFocused: 'none'};\n\n    getAllEntries = async() => {\n        const pokeEntries = await pokeapi.get('/pokemon?limit=893');\n\n        let allPokeEntries = pokeEntries.data.results;\n\n        this.setState({pokeList: allPokeEntries});\n    };\n\n    componentDidMount() {\n        this.getAllEntries();\n        window.addEventListener('click', this.handleWindowClick);\n    };\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.onSubmit(this.state.term);\n    };\n\n    handleWindowClick = (e) => {\n        if (e.target.className !== 'search-input' && e.target.className !== 'suggestions-span') {\n            this.setState({isFocused: 'none'});\n        };\n    };\n\n    render() {\n        return(\n            <nav className=\"searchbar\">\n                <form onSubmit={this.onFormSubmit} className=\"searchbar__form\" autoComplete=\"off\">\n                    <div className=\"searchbar__form--field\">\n                        <label>Pokemon Search</label>\n                        <input\n                            className=\"search-input\"\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"pokemon name or type\"\n                            onChange={(e) => {\n                                let value = e.target.value\n                                value = value.replace(/[^A-Za-z]/ig, '').toLowerCase()\n                                this.setState({term: value})\n                            }}\n                            onFocus={() => this.setState({isFocused: 'block'})}\n                            value={this.state.term}\n                            id=\"search-input\"\n                        />\n                        <SearchSuggestions\n                            query={this.state.term}\n                            clickFill={(e) => this.setState({term: e.target.innerHTML})}\n                            entries={this.state.pokeList}\n                            isFocused={this.state.isFocused}\n                        />\n                    </div>\n                    <button className=\"searchbar__form--btn\">Search</button>\n                </form>\n            </nav>\n        );\n    };\n};\n\nexport default SearchBar;","import React from 'react';\nimport '../styles/_loaderButton.scss';\n\nconst LoaderButtons = (props) => {\n\n    return(\n        <div className=\"loader-button-container\">\n            <div \n                className=\"loader-button-container__btn\"\n                onClick={props.loadNext}\n                style={{display: `${props.limit === 893 || props.listMode !== 'default' ? 'none' : 'block'}`}}>\n                    {props.listMode !== 'default' ? 'Back' : 'Show More'}\n            </div>\n            <div className=\"loader-button-container__custom-select\">\n                <select onChange={(e) => props.loadGen(e.target.value)} className=\"loader-button-container__custom-select--gens\">\n                    <option value=\"0\" disabled selected>GEN</option>\n                    <option value=\"1\">Gen 1</option>\n                    <option value=\"2\">Gen 2</option>\n                    <option value=\"3\">Gen 3</option>\n                    <option value=\"4\">Gen 4</option>\n                    <option value=\"5\">Gen 5</option>\n                    <option value=\"6\">Gen 6</option>\n                    <option value=\"7\">Gen 7</option>\n                    <option value=\"8\">Gen 8</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default LoaderButtons;","import React from 'react';\nimport pokeapi from '../api/pokeapi';\n\nimport Welcome from './Welcome';\nimport SearchBar from './SearchBar';\nimport PokeCard from './PokeCard';\nimport LoaderButtons from './LoaderButtons';\n\nclass App extends React.Component {\n\n    state = {\n        pokeData: [],\n        moves: this.props.moveData,\n        pokeLimit: 25,\n        currentList: null,\n        listMode: 'default',\n        typeSearch: 'none',\n        genSearch: 'none'\n    };\n\n    //NOTE 30/11/20 ::: Maybe add a star next to stats that are maxed on the bar to indicate that this pokemon has the highest possible of given stat\n    //NOTE 1/12/20 ::: Figure out how to remove the first pokecard in the list from the DOM/view when doing a new search while another loop is going to get rid of the extra element <<<<<\n    //NOTE 5/12/20 ::: Think of adding a new button in place of load all to load 10-25 pokemon at a time by stats (attack will get top 10 pokemon with highest attack, def with top 10 def, so on)\n    //NOTE 5/12/20 ::: Made seperate async functions for each instance of generating pokeData for gen and type, working GREAT now\n\n\n    componentDidMount() {\n        //generating state for all pokemon API fetches\n        this.populatePokeData(this.state.pokeLimit);\n    };\n\n    populatePokeData = async(limit) => {\n        let emptyArr = [];\n\n        for (let i = 1; i <= limit; i++) {\n            emptyArr.push(i);\n        };\n\n        try { \n            for (const el of emptyArr) {\n                if (this.state.listMode !== 'default') { break; };\n                const pokemon = await pokeapi.get(`/pokemon/${el}`);\n                const species = await pokeapi.get(`/pokemon-species/${el}`);\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        } catch (error) {\n            console.log('Error return from populatePokeData');\n            console.log(error);\n        };\n    };\n\n    loadMorePokemon = async () => { //NOTE::: pokeLimit and any hardcoded number in this function will need to be updated manually\n        if (this.state.listMode !== 'default') { //refresh list\n            this.setState({listMode: 'default'});\n            this.setState({pokeData: []});\n            this.populatePokeData(this.state.pokeLimit);\n        } else { //load more like usual\n            //empty array to loop over els for API calls\n            let emptyArr = [];\n\n            //filling array with every number needed for API calls: currently 893 pokemon\n            for (let i = this.state.pokeLimit + 1; i <= this.state.pokeLimit + 25; i++) {\n                emptyArr.push(i);\n            };\n\n            //updating pokeLimit for incrimental/repeat usage\n            this.setState((prevState) => {\n                return prevState.pokeLimit += 25;\n            });\n\n            //loop through emptyArr to numerically call data for each pokemon in order and push into pokeList state\n            try {\n                for (const el of emptyArr) {\n                    if (this.state.listMode !== 'default') { break; };\n\n                    const pokemon = await pokeapi.get(`/pokemon/${el}`);\n                    const species = await pokeapi.get(`/pokemon-species/${el}`);\n\n                    if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                        this.setState((prevState => {\n                            return prevState.pokeData.push({...species.data, ...pokemon.data});\n                        }));\n                    };\n                };\n            } catch(error) {\n                console.log('Error return from App.js loadMorePokemon:');\n                console.log(error);\n            };\n        }\n    };\n\n////////// FUNCTIONS FOR TYPE //////////\n    \n    searchByType = async (term) => {\n        switch(true) {\n            case term === 'fire':\n                this.getTypeFire(term);\n                break;\n            case term === 'normal':\n                this.getTypeNormal(term); \n                break;\n            case term === 'grass':\n                this.getTypeGrass(term);\n                break;\n            case term === 'water':\n                this.getTypeWater(term);\n                break;\n            case term === 'fighting':\n                this.getTypeFighting(term);\n                break;\n            case term === 'flying':\n                this.getTypeFlying(term);\n                break;\n            case term === 'poison':\n                this.getTypePoison(term);\n                break;\n            case term === 'ground':\n                this.getTypeGround(term);\n                break;\n            case term === 'rock':\n                this.getTypeRock(term);\n                break;\n            case term === 'bug':\n                this.getTypeBug(term);\n                break;\n            case term === 'ghost':\n                this.getTypeGhost(term);\n                break;\n            case term === 'electric':\n                this.getTypeElectric(term);\n                break;\n            case term === 'psychic':\n                this.getTypePsychic(term);\n                break;\n            case term === 'ice':\n                this.getTypeIce(term); \n                break;\n            case term === 'dragon':\n                this.getTypeDragon(term);\n                break;\n            case term === 'dark':\n                this.getTypeDark(term);\n                break;\n            case term === 'steel':\n                this.getTypeSteel(term);\n                break;\n            case term === 'fairy':\n                this.getTypeFairy(term);\n                break;\n            default:\n                return;\n        }\n    };\n\n    getTypeFire = async(type) => {\n\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeNormal = async(type) => {\n\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/normal`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeGrass = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeWater = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeFighting = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeFlying = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypePoison = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All poison pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeGround = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ground pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeRock = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeBug = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeGhost = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeElectric = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypePsychic = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeIce = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeDragon = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeDark = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeSteel = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n    getTypeFairy = async(type) => {\n        this.setState({listMode: 'type'});\n        this.setState({pokeData: []});\n        this.setState({typeSearch: type});\n\n        const response = await pokeapi.get(`/type/${type}`);\n\n        for (let i = 0; i <= response.data.pokemon.length; i++) {\n            if (this.state.listMode !== 'type') { break; };\n            if (this.state.typeSearch !== type) { break; };\n            \n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon[i].pokemon.url.slice(34).slice(0, -1)}`);\n            //break condition in case max id is reached\n            if (pokemon.data.id >= 893) {\n                console.log(`All ${type} pokemon entries rendered`);\n                console.log(`Current entries in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //pokemon id 808 and 809 are currently broken and have empty stat arrays\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                }));\n            };\n        };\n    }\n\n////////// FUNCTION FOR SINGLE, REFRESH AND TYPE SEARCH //////////\n\n    onSearchSubmit = async (term) => {\n        //clear currently rendered entries from screen/DOM\n        document.getElementById('pokemon-gen-point').innerHTML = '';\n\n        try {\n            if (term === 'fire' || term === 'normal' || term === 'grass' || term === 'water' || term === 'fighting' || term === 'flying' || term === 'poison' || term === 'ground' || term === 'rock' || term === 'bug' || term === 'ghost' || term === 'electric' || term === 'psychic' || term === 'ice' || term === 'dragon' || term === 'dark' || term === 'steel' || term === 'fairy') { //check to see if term is a type string\n\n                this.searchByType(term);\n\n            } else { //normal single return search\n                const pokemon = await pokeapi.get(`/pokemon/${term}`, {\n                    params: { query: term }\n                });\n                const species = await pokeapi.get(`/pokemon-species/${term}`, {\n                    params: { query: term }\n                });\n\n                if (term === '') { //refresh\n                    if (this.state.listMode !== 'default' && this.state.pokeData.length !== this.state.pokeLimit) {\n                        this.setState({listMode: 'default'});\n                        this.setState({pokeData: []});\n                        this.populatePokeData(this.state.pokeLimit);\n                    }\n                } else { //single pokemon return\n                    this.setState({listMode: 'search'});\n                    this.setState({pokeData: []});\n                    this.setState((prevState => {\n                        return prevState.pokeData.push({...species.data, ...pokemon.data});\n                    }));\n\n                    //clean-up for extra cards leftover from active loops, turns display to none for last element\n                    let parent = document.querySelector('.main-display');\n                    setTimeout(() => {\n                        if (parent.childNodes.length !== 1) {\n                            parent.lastElementChild.style.display = \"none\";\n                        }\n                    }, 1000);\n                };\n            }\n        } catch(error) {\n            console.log('Error return from App.js onSearchSubmit:');\n            console.log(error);\n        };\n    };\n\n////////// FUNCTIONS FOR GEN //////////\n    \n    searchByGen = async (generation) => {\n        switch(true) {\n            case generation === '1':\n                this.getGen1(generation);\n                break;\n            case generation === '2':\n                this.getGen2(generation);\n                break;\n            case generation === '3':\n                this.getGen3(generation);\n                break;\n            case generation === '4':\n                this.getGen4(generation);\n                break;\n            case generation === '5':\n                this.getGen5(generation);\n                break;\n            case generation === '6':\n                this.getGen6(generation);\n                break;\n            case generation === '7':\n                this.getGen7(generation);\n                break;\n            case generation === '8':\n                this.getGen8(generation);\n                break;\n            default:\n                return;    \n        };\n    };\n\n    getGen1 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen2 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen3 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen4 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen5 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen6 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen7 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    getGen8 = async(gen) => {\n        this.setState({listMode: 'gen'});\n        this.setState({pokeData: []});\n        this.setState({genSearch: gen});\n\n        const response = await pokeapi.get(`/generation/${gen}`); //returns array with pokemon_species property containing all names and urls for generation\n\n        //loop through all returned ids (sliced to extract ID instead of name, which sometimes doesn't match API call name)\n        for (let i = 0; i < response.data.pokemon_species.length; i++) {\n            if (this.state.listMode !== 'gen') { break; };\n            if (this.state.genSearch !== gen) { break; };\n\n            const pokemon = await pokeapi.get(`/pokemon/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n            const species = await pokeapi.get(`/pokemon-species/${response.data.pokemon_species[i].url.slice(42).slice(0, -1)}`);\n\n            if (pokemon.data.id >= 893) { //break condition to avoid getting \"extra\" pk (megas, etc)\n                console.log(`All gen ${gen} pokemon entries rendered`);\n                console.log(`Current pokemon in mounted component: ${this.state.pokeData.length}`);\n                \n                break; \n            };\n\n            //condition for pushing API returns into both species and poke lists\n            if (pokemon.data.id !== 808 && pokemon.data.id !== 809) {\n                this.setState((prevState) => {\n                    return prevState.pokeData.push({...species.data, ...pokemon.data});\n                });\n            };\n        };\n    };\n\n    loadGen = async(generation) => {\n        //clear currently rendered entries from screen/DOM\n        document.getElementById('pokemon-gen-point').innerHTML = '';\n\n        try {\n\n            this.searchByGen(generation);\n\n        } catch (error) {\n            console.log('Error return from App.js loadGen:');\n            console.log(error);\n        };\n    };\n\n////////// RENDER/RETURN //////////\n\n    render() {\n        return(\n            <main>\n                <SearchBar\n                    onSubmit={this.onSearchSubmit}\n                />\n                <Welcome />\n                <PokeCard\n                    pokeData={this.state.pokeData}\n                    moveData={this.state.moves}\n                />\n                <LoaderButtons \n                    limit={this.state.pokeLimit}\n                    loadNext={this.loadMorePokemon}\n                    listMode={this.state.listMode}\n                    loadGen={this.loadGen}\n                />\n            </main>\n        ) \n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/_base.scss';\nimport App from './components/App';\n\nconst moveData = require('./json-data/moves.json');\n\nReactDOM.render(<App moveData={moveData} />, document.querySelector('#root'));"],"sourceRoot":""}